-- (Vishant Kumar - S11230430, Anav Chand - S11221203, Rohan Nandan - S11234883, Zhixian Chen - S11230686) --
-- COMPANY
DROP TABLE IF EXISTS COMPANY;
CREATE TABLE IF NOT EXISTS COMPANY (
    COMPANY_CODE INT PRIMARY KEY,
    COMPANY_NAME VARCHAR(100)
);

-- QUALIFICATION
DROP TABLE IF EXISTS QUALIFICATION;
CREATE TABLE IF NOT EXISTS QUALIFICATION (
    QUALIFICATION_CODE INT PRIMARY KEY,
    QUALIFICATION_DESCRIPTION VARCHAR(255)
);

-- COURSE
DROP TABLE IF EXISTS COURSE;
CREATE TABLE IF NOT EXISTS COURSE (
    COURSE_CODE INT PRIMARY KEY,
    COURSE_DESCRIPTION VARCHAR(255),
    COURSE_FEE DECIMAL(10, 2),
    QUALIFICATION_CODE INT,
    FOREIGN KEY (QUALIFICATION_CODE) REFERENCES QUALIFICATION(QUALIFICATION_CODE)
);

-- PREREQUISITE
DROP TABLE IF EXISTS PREREQUISITE;
CREATE TABLE IF NOT EXISTS PREREQUISITE (
    COURSE_CODE INT,
    QUALIFICATION_CODE INT,
    PRIMARY KEY (COURSE_CODE, QUALIFICATION_CODE),
    FOREIGN KEY (COURSE_CODE) REFERENCES COURSE(COURSE_CODE),
    FOREIGN KEY (QUALIFICATION_CODE) REFERENCES QUALIFICATION(QUALIFICATION_CODE)
);

-- SESSION
DROP TABLE IF EXISTS SESSION;
CREATE TABLE IF NOT EXISTS SESSION (
    SESSION_CODE INT PRIMARY KEY,
    SESSION_START_DATE DATE,
    SESSION_FEE DECIMAL(10, 2),
    COURSE_CODE INT,
    FOREIGN KEY (COURSE_CODE) REFERENCES COURSE(COURSE_CODE)
);

-- CANDIDATE
DROP TABLE IF EXISTS CANDIDATE;
CREATE TABLE IF NOT EXISTS CANDIDATE (
    CANDIDATE_CODE INT PRIMARY KEY,
    CANDIDATE_FNAME VARCHAR(50),
    CANDIDATE_LNAME VARCHAR(50)
);

-- ENROLLMENT
DROP TABLE IF EXISTS ENROLLMENT;
CREATE TABLE IF NOT EXISTS ENROLLMENT (
    SESSION_CODE INT,
    CANDIDATE_CODE INT,
    ENROLLMENT_DATE DATE,
    ENROLLMENT_FEE_PAYMENT DECIMAL(10, 2),
    PRIMARY KEY (SESSION_CODE, CANDIDATE_CODE),
    FOREIGN KEY (SESSION_CODE) REFERENCES SESSION(SESSION_CODE),
    FOREIGN KEY (CANDIDATE_CODE) REFERENCES CANDIDATE(CANDIDATE_CODE)
);

-- EDUCATION
DROP TABLE IF EXISTS EDUCATION;
CREATE TABLE IF NOT EXISTS EDUCATION (
    QUALIFICATION_CODE INT,
    CANDIDATE_CODE INT,
    EDUCATION_EARNED_DATE DATE,
    PRIMARY KEY (QUALIFICATION_CODE, CANDIDATE_CODE),
    FOREIGN KEY (QUALIFICATION_CODE) REFERENCES QUALIFICATION(QUALIFICATION_CODE),
    FOREIGN KEY (CANDIDATE_CODE) REFERENCES CANDIDATE(CANDIDATE_CODE)
);

-- JOB_OPENING
DROP TABLE IF EXISTS JOB_OPENING;
CREATE TABLE IF NOT EXISTS JOB_OPENING (
    JOB_OPENING_CODE INT PRIMARY KEY,
    JOB_OPENING_DESCRIPTION VARCHAR(255),
    JOB_OPENING_AVAILABILITY_STATUS VARCHAR(50),
    QUALIFICATION_CODE INT,
    COMPANY_CODE INT,
    FOREIGN KEY (QUALIFICATION_CODE) REFERENCES QUALIFICATION(QUALIFICATION_CODE),
    FOREIGN KEY (COMPANY_CODE) REFERENCES COMPANY(COMPANY_CODE)
);

-- PLACEMENT
DROP TABLE IF EXISTS PLACEMENT;
CREATE TABLE IF NOT EXISTS PLACEMENT (
    PLACEMENT_CODE INT PRIMARY KEY,
    PLACEMENT_DATE DATE,
    PLACEMENT_HOURS_WORKED INT,
    CANDIDATE_CODE INT,
    JOB_OPENING_CODE INT,
    FOREIGN KEY (CANDIDATE_CODE) REFERENCES CANDIDATE(CANDIDATE_CODE),
    FOREIGN KEY (JOB_OPENING_CODE) REFERENCES JOB_OPENING(JOB_OPENING_CODE)
);

-- JOB_HISTORY
DROP TABLE IF EXISTS JOB_HISTORY;
CREATE TABLE IF NOT EXISTS JOB_HISTORY (
    JOB_HISTORY_CODE INT PRIMARY KEY,
    PLACEMENT_CODE INT,
    CANDIDATE_CODE INT,
    FOREIGN KEY (PLACEMENT_CODE) REFERENCES PLACEMENT(PLACEMENT_CODE),
    FOREIGN KEY (CANDIDATE_CODE) REFERENCES CANDIDATE(CANDIDATE_CODE)
);
